{"version":3,"sources":["test/test-helpers.coffee","test/views/header-test.coffee","test/views/main-test.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA","file":"public/test/javascripts/test.js","sourcesContent":["var chai, sinonChai;\n\nchai = require('chai');\n\nsinonChai = require('sinon-chai');\n\nchai.use(sinonChai);\n\nmodule.exports = {\n  expect: chai.expect,\n  sinon: require('sinon')\n};\n","var HeaderView, HeaderViewTest, mediator,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nHeaderView = require('views/header');\n\nmediator = require('mediator');\n\nHeaderViewTest = (function(superClass) {\n  extend(HeaderViewTest, superClass);\n\n  function HeaderViewTest() {\n    return HeaderViewTest.__super__.constructor.apply(this, arguments);\n  }\n\n  HeaderViewTest.prototype.renderTimes = 0;\n\n  HeaderViewTest.prototype.render = function() {\n    HeaderViewTest.__super__.render.apply(this, arguments);\n    return this.renderTimes += 1;\n  };\n\n  return HeaderViewTest;\n\n})(HeaderView);\n\ndescribe('HeaderView', function() {\n  beforeEach(function() {\n    return this.view = new HeaderViewTest;\n  });\n  afterEach(function() {\n    return this.view.dispose();\n  });\n  return it('should display 5 links', function() {\n    return expect(this.view.$el.find('a')).to.have.length(5);\n  });\n});\n","var MainView;\n\nMainView = require('views/main');\n\ndescribe('MainView', function() {\n  beforeEach(function() {\n    return this.view = new MainView;\n  });\n  afterEach(function() {\n    return this.view.dispose();\n  });\n  return it('should auto-render', function() {\n    return expect(this.view.$el.find('img')).to.have.length(1);\n  });\n});\n"]}