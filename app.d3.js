// Generated by CoffeeScript 1.4.0
(function() {
  var root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.App.D3 = (function() {

    function D3() {}

    D3.prototype.renderCirclePack = function(elem, data, options) {
      var format, height, node, pack, vis, width;
      if (options == null) {
        options = {};
      }
      width = 600;
      height = 600;
      format = d3.format(",d");
      pack = d3.layout.pack().size([width - 4, height - 4]).value(function(d) {
        return d.size;
      });
      vis = d3.select(elem).append("svg").attr("width", width).attr("height", height).attr("class", "pack").append("g").attr("transform", "translate(2, 2)");
      node = vis.data([data]).selectAll("" + elem + " g.node").data(pack.nodes).enter().append("g").attr("class", function(d) {
        if (d.children) {
          return "node";
        } else {
          return "leaf node";
        }
      }).attr("transform", function(d) {
        return "translate(" + d.x + "," + d.y + ")";
      });
      node.append("title").text(function(d) {
        return d.name + (d.children ? "" : ": " + format(d.size));
      });
      node.append("circle").attr("r", function(d) {
        return d.r;
      }).on("click", options.click);
      return node.filter(function(d) {
        return d.children;
      }).append("text").attr("text-anchor", "middle").attr("dy", ".3em").text(function(d) {
        if (d.name.length <= d.r / 3) {
          return d.name;
        } else {
          return "";
        }
      });
    };

    return D3;

  })();

}).call(this);
