// Generated by CoffeeScript 1.4.0
(function() {
  var root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.App.Github = (function() {

    function Github() {}

    Github.prototype.loadRepo = function(repo, success, error, recursive) {
      if (recursive == null) {
        recursive = true;
      }
      return $.get("https://api.github.com/repos/" + repo + "/git/trees/HEAD?recursive=" + (recursive ? '1' : '0'), success);
    };

    Github.prototype.parseForD3 = function(data) {
      var file, node, parent, path, paths, segments, tree, _i, _len;
      tree = data.tree;
      paths = {};
      for (_i = 0, _len = tree.length; _i < _len; _i++) {
        node = tree[_i];
        if (node.type === 'tree') {
          continue;
        }
        segments = ("root/" + node.path).match(/(.*)\/(.*)/);
        file = segments[2];
        path = segments[1];
        paths[path] || (paths[path] = {
          name: path.substr(5),
          children: []
        });
        node.name = file;
        paths[path].children.push(node);
      }
      for (path in paths) {
        node = paths[path];
        parent = path.match(/(.*)\/(.*)/);
        if (!(parent && (parent = parent[1]))) {
          continue;
        }
        paths[parent] || (paths[parent] = {
          name: path,
          children: []
        });
        paths[parent].children.push(node);
      }
      return paths.root;
    };

    return Github;

  })();

}).call(this);
