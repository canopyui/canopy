// Generated by CoffeeScript 1.4.0
(function() {
  var root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.App = (function() {

    function App(repo_url) {
      this.github = new App.Github;
      this.d3 = new App.D3;
      if (repo_url) {
        this.load(repo_url);
      }
    }

    App.prototype.load = function(repo_url) {
      var _this = this;
      return this.github.loadRepo(repo_url, function(data) {
        data = _this.github.parseForD3(data);
        return _this.d3.renderCirclePack(data);
      });
    };

    App.prototype.trimTree = function(tree, level, extend) {
      var branch, _i, _len, _ref;
      if (level == null) {
        level = 1;
      }
      if (extend == null) {
        extend = true;
      }
      if (extend) {
        tree = $.extend({}, tree);
      }
      if (!tree.children) {
        return tree;
      }
      _ref = tree.children;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        branch = _ref[_i];
        if (!branch.children) {
          continue;
        }
        if (level === 1) {
          branch.size = this.sumSize(branch.children);
          delete branch.children;
        } else {
          this.trimTree(branch, level - 1);
        }
      }
      return tree;
    };

    App.prototype.sumSize = function(tree) {
      return 0;
    };

    return App;

  })();

}).call(this);
